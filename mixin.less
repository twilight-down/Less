// 将class选择器和id选择器混入到其他样式中
.a,.b{
  color: aqua;
}

.mixin-calss{
  .a; // 括号是可选的
  .b()
}

//-------------------------
// 使用mixin但是又不希望被输出到css文件中
// 可以在定义mixin的时候在后面加上括号
.other-mixin(){
  background-color: blue;
}

.other-class {
  // 同样的这里的括号也是可选的
  .other-mixin()
}

// --------------------------
// mixin使用选择器
.hover-mixin(){
  &:hover{
    border: 1px solid #ccc;
  }
}

button {
  .hover-mixin()
}

// -------------
// 在更复杂的选择器中混入属性，可以叠加多个id或类名
#outer{
  .inner{
    color: pink;
  }
}

.complite-mixin{
  #outer > .inner
}
// 下面的写法效果是一样的
// #outer > .inner;
// #outer > .inner();
// #outer .inner;
// #outer .inner();
// #outer.inner;
// #outer.inner();

// ------------------
// 命名空间守卫
@mode : nothuge;
#namespace when (@mode = huge){
  .mixin(){/* */}
}

#namespace {
  .mixin() when (@mode = huge) { /* */ }
}

// --------------------
// !important关键字
.foo{
  background-color: #fff;
  font-size: 20px
}
.unimportant {
  .foo();
}
.important{
  .foo()!important
}

// ---------------
// 携带参数的混入
// 定义函数
.border-radius(@radius){
  border-radius:@radius
}
// 调用函数
#header {
  .border-radius(4px);
}
// 设置默认值
.font-size(@fontsize:10px){
  font-size: @fontsize;
}
#header{
  .font-size();
  // .font-size;
}
// 不传递参数
.margin(){
 margin:auto;
}
pre{.margin}